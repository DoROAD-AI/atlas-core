{
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Atlas is DoROAD's flagship Global Travel and Aviation Intelligence Data API. Version 2.0 represents a significant leap forward, providing a comprehensive, high-performance RESTful API for accessing detailed country information, extensive airport data, and up-to-date passport visa requirements worldwide. This service offers extensive data about countries (demographics, geography, international codes, etc.), airports, and visa regulations for various passports.",
        "title": "Atlas - Global Travel and Aviation Intelligence Data API by DoROAD",
        "termsOfService": "http://atlas.doroad.io/terms/",
        "contact": {
            "name": "Atlas API Support",
            "url": "https://github.com/DoROAD-AI/atlas/issues",
            "email": "support@doroad.ai"
        },
        "license": {
            "name": "MIT / Proprietary",
            "url": "https://github.com/DoROAD-AI/atlas/blob/main/LICENSE"
        },
        "version": "2.0"
    },
    "basePath": "/v2",
    "paths": {
        "/airlines": {
            "get": {
                "description": "Retrieves a list of all airlines.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Get all airlines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airline"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airlines/active": {
            "get": {
                "description": "Retrieves all airlines that are currently active.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Get active airlines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airline"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airlines/country/{countryName}": {
            "get": {
                "description": "Retrieves all airlines based in a specific country.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Get airlines by country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country name",
                        "name": "countryName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airline"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airlines/iata/{iataCode}": {
            "get": {
                "description": "Retrieves an airline by its IATA code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Get airline by IATA code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IATA code",
                        "name": "iataCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.Airline"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airlines/icao/{icaoCode}": {
            "get": {
                "description": "Retrieves an airline by its ICAO code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Get airline by ICAO code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO code",
                        "name": "icaoCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.Airline"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airlines/id/{airlineID}": {
            "get": {
                "description": "Retrieves a specific airline by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Get airline by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Airline ID",
                        "name": "airlineID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.Airline"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airlines/search": {
            "get": {
                "description": "Performs a flexible search for airlines based on a query string.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airlines"
                ],
                "summary": "Search airlines",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search string (can match airline name, country, ICAO/IATA code, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airline"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports": {
            "get": {
                "description": "Retrieves a list of all airports for all countries (keyed by each country's alpha-2 code).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get all airports",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/v2.CountryAirports"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/by-code/{airportCode}": {
            "get": {
                "description": "Retrieves a specific airport by its ICAO or IATA code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airport by ICAO or IATA code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Airport ICAO or IATA code",
                        "name": "airportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.Airport"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/distance": {
            "get": {
                "description": "Calculates the distance (in kilometers and miles) between two airports.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Calculate distance between two airports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO or IATA code of the first airport",
                        "name": "airport1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ICAO or IATA code of the second airport",
                        "name": "airport2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.AirportDistance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/keyword/{keyword}": {
            "get": {
                "description": "Retrieves all airports associated with a specific keyword.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports by keyword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Keyword to search for",
                        "name": "keyword",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/municipality/{municipalityName}": {
            "get": {
                "description": "Retrieves all airports within a specific municipality.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports by municipality",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Municipality name",
                        "name": "municipalityName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/radius": {
            "get": {
                "description": "Retrieves all airports within a specified radius of a given latitude/longitude coordinate.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports within a radius",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Latitude of the center point",
                        "name": "latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude of the center point",
                        "name": "longitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Radius in kilometers",
                        "name": "radius",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/region/{isoRegion}": {
            "get": {
                "description": "Retrieves all airports within a specific ISO region.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports by ISO region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ISO region code (e.g., VC-04)",
                        "name": "isoRegion",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/scheduled": {
            "get": {
                "description": "Retrieves all airports that have scheduled airline service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports with scheduled service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/search": {
            "get": {
                "description": "Performs a flexible search for airports based on a query string.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Search airports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search string (can match airport name, city, ICAO/IATA code, etc.)",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/type/{airportType}": {
            "get": {
                "description": "Retrieves all airports of a specific type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports by type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Airport type (e.g., medium_airport, closed)",
                        "name": "airportType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.Airport"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/{countryCode}": {
            "get": {
                "description": "Retrieves all airports in a specific country. The country code can be in any recognized format (CCA2, CCA3, CCN3, CIOC, FIFA, or alt spelling).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airports by country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country code (e.g., VC, VCT, 670, etc.)",
                        "name": "countryCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.CountryAirports"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/{countryCode}/{airportIdent}": {
            "get": {
                "description": "Retrieves a specific airport within a country by matching the airport's ICAO or IATA code. The country code can be in any recognized format (CCA2, CCA3, CCN3, CIOC, etc.).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get a single airport by identifier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country code (e.g., VC, VCT, 670, etc.)",
                        "name": "countryCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport Ident (ICAO) or IATA code",
                        "name": "airportIdent",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.Airport"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/{countryCode}/{airportIdent}/frequencies": {
            "get": {
                "description": "Retrieves communication frequencies used at a specific airport.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airport frequencies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country code (e.g., VC, VCT, 670, etc.)",
                        "name": "countryCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport Ident (ICAO) or IATA code",
                        "name": "airportIdent",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.AirportFrequency"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/airports/{countryCode}/{airportIdent}/runways": {
            "get": {
                "description": "Retrieves detailed runway information for a specific airport.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get airport runways",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country code (e.g., VC, VCT, 670, etc.)",
                        "name": "countryCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Airport Ident (ICAO) or IATA code",
                        "name": "airportIdent",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.AirportRunway"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/alpha": {
            "get": {
                "description": "Get countries matching a list of codes (CCA2, CCN3, CCA3, or CIOC).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by codes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of country codes (CCA2, CCN3, CCA3, CIOC)",
                        "name": "codes",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/capital/{capital}": {
            "get": {
                "description": "Get countries matching a capital city name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by capital",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Capital city name",
                        "name": "capital",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ccn3/{code}": {
            "get": {
                "description": "Get details of a specific country by its numeric ISO code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get country by numeric ISO code (CCN3)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Numeric code (e.g., 840)",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Country"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "description": "Get details of all countries, with optional filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get all countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by independent status (true or false)",
                        "name": "independent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/countries/{code}": {
            "get": {
                "description": "Get details of a specific country by its code (CCA2 or CCA3).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get country by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country code (CCA2 or CCA3)",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Country"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/currency/{currency}": {
            "get": {
                "description": "Get countries matching a currency code or name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by currency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency code or name",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/demonym/{demonym}": {
            "get": {
                "description": "Get countries matching a demonym.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by demonym",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Demonym",
                        "name": "demonym",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/aircraft/{icao24}": {
            "get": {
                "description": "Retrieves flights for [icao24] in [begin, end], up to 30 days.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get flights by aircraft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO24 address (hex)",
                        "name": "icao24",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (Unix, RFC3339, or relative)",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (Unix, RFC3339, or relative)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enhanced flight data + boundary times",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/arrivals/{airport}": {
            "get": {
                "description": "Retrieves flights that arrived at [airport] in [begin, end], up to 7 days.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get arrivals by airport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO code of airport",
                        "name": "airport",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (Unix, RFC3339, or relative)",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (Unix, RFC3339, or relative)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enhanced flight data + boundary times",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/departures/{airport}": {
            "get": {
                "description": "Retrieves flights that departed [airport] in [begin, end], up to 7 days.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get departures by airport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO code of airport",
                        "name": "airport",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (Unix, RFC3339, or relative)",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (Unix, RFC3339, or relative)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enhanced flight data + boundary times",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/interval": {
            "get": {
                "description": "Retrieves flights for a short interval [begin, end], max 2 hours.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get flights from interval",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start time (Unix, RFC3339, or relative)",
                        "name": "begin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (Unix, RFC3339, or relative)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Enhanced flight data + boundary times",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/my-states": {
            "get": {
                "description": "Requires Basic Auth. Retrieves the state vectors from your own sensors only.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get states for your own sensors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time can be Unix, RFC3339, or negative/relative (default=0 =\u003e now)",
                        "name": "time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ICAO24 filter",
                        "name": "icao24",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sensor serial(s)",
                        "name": "serials",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.OpenSkyStates"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized if no username/password configured",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/states/all": {
            "get": {
                "description": "Retrieves the state vectors for aircraft at a given time (or 0 for \"now\"). Optional: filter by icao24 or bounding box.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get aircraft states (all)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time can be Unix, RFC3339, or negative/relative (default=0 =\u003e now)",
                        "name": "time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Single or comma-separated ICAO24 address(es)",
                        "name": "icao24",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "min_lat,max_lat,min_lon,max_lon [4 floats]",
                        "name": "bbox",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.OpenSkyStates"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/flights/track": {
            "get": {
                "description": "Retrieves the trajectory for an aircraft [icao24] at time t. If t=0 =\u003e live track.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flights"
                ],
                "summary": "Get flight track by aircraft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ICAO24 address",
                        "name": "icao24",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time can be Unix, RFC3339, or negative/relative (0 =\u003e live track)",
                        "name": "time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.FlightTrack"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/independent": {
            "get": {
                "description": "Get countries filtered by independence. Defaults to status=true if not specified.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by independence status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "true or false. Defaults to 'true'",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lang/{language}": {
            "get": {
                "description": "Get countries matching a language code or name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by language",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code or name",
                        "name": "language",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/name/{name}": {
            "get": {
                "description": "Get countries matching a name query (common or official). Use fullText=true for exact name match.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country name (common or official)",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exact match for full name (true/false)",
                        "name": "fullText",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/passports/compare": {
            "get": {
                "description": "Compares visa requirements for a list of passports to a single destination.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Passports"
                ],
                "summary": "Compare visa requirements for multiple passports to a single destination",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Comma-separated list of passport codes (e.g., USA,DEU,JPN)",
                        "name": "passports",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Destination country code (e.g., FRA)",
                        "name": "destination",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/v2.VisaRequirement"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/passports/{passportCode}": {
            "get": {
                "description": "Get visa requirement data for a specific passport.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Passports"
                ],
                "summary": "Get passport data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840, etc.)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.PassportResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/region/{region}": {
            "get": {
                "description": "Get countries matching a region.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Region name",
                        "name": "region",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/risks": {
            "get": {
                "description": "Retrieves risk advisories for all countries.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Risks"
                ],
                "summary": "Get all country risk data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.RiskData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/risks/advisory/{level}": {
            "get": {
                "description": "Retrieves a list of countries that have a specific advisory level.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Risks"
                ],
                "summary": "Get countries by advisory level",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advisory level",
                        "name": "level",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/risks/{countryCode}": {
            "get": {
                "description": "Retrieves risk advisory information for a given country code (ISO2).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Risks"
                ],
                "summary": "Get risk data for a specific country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Country code (ISO2)",
                        "name": "countryCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.CountryRiskInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Performs a comprehensive search across all data types (countries, airports) based on query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Super Type Query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of data to search for (country, airport). If omitted or set to 'all', searches across all data types.",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of the country or airport",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Region of the country",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Subregion of the country",
                        "name": "subregion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country code Alpha-2",
                        "name": "cca2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country code Alpha-3",
                        "name": "cca3",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Country code Numeric",
                        "name": "ccn3",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Capital city of the country",
                        "name": "capital",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Airport Ident code (e.g., ICAO code)",
                        "name": "ident",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Airport IATA code",
                        "name": "iata_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ISO country code for airports",
                        "name": "iso_country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ISO region code for airports",
                        "name": "iso_region",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Municipality of the airport",
                        "name": "municipality",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of the airport",
                        "name": "airport_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subregion/{subregion}": {
            "get": {
                "description": "Get countries matching a subregion.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by subregion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subregion name",
                        "name": "subregion",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/translation/{translation}": {
            "get": {
                "description": "Get countries matching a translation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Countries"
                ],
                "summary": "Get countries by translation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Translation",
                        "name": "translation",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of fields to include in the response",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v1.Country"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas": {
            "get": {
                "description": "Get complete visa requirement data for all countries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get all visa data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.VisaData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/common-visa-free": {
            "get": {
                "description": "Get destinations that are visa-free for multiple passports",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get common visa-free destinations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comma-separated list of passport codes",
                        "name": "passports",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/destination/{destinationCode}": {
            "get": {
                "description": "Get visa requirements for all passports visiting a specific destination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get visa requirements for destination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Destination country code",
                        "name": "destinationCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.VisaDestinationInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/destination/{destinationCode}/sorted": {
            "get": {
                "description": "Get sorted visa requirements for all passports visiting a specific destination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get sorted visa requirements for destination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Destination country code",
                        "name": "destinationCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sort field (passport_country, visa_requirement, allowed_stay, iso2, iso3)",
                        "name": "sort_by",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.SortedVisaDestinationInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/passport/{passportCode}": {
            "get": {
                "description": "Get visa requirements for a specific passport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get passport visa requirements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.PassportResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/passport/{passportCode}/all": {
            "get": {
                "description": "Get all visa requirements for a specific passport (same as /visas/passport/:passportCode)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get all visa requirements for a passport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.PassportResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/passport/{passportCode}/e-visa": {
            "get": {
                "description": "Get list of countries that offer e-visa for a specific passport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get e-visa countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/passport/{passportCode}/visa-free": {
            "get": {
                "description": "Get list of countries that are visa-free for a specific passport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get visa-free countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/passport/{passportCode}/visa-on-arrival": {
            "get": {
                "description": "Get list of countries that offer visa on arrival for a specific passport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get visa-on-arrival countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/passport/{passportCode}/visa-required": {
            "get": {
                "description": "Get list of countries that require a visa for a specific passport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get visa-required countries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Passport code (e.g., USA, US, 840)",
                        "name": "passportCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/ranking": {
            "get": {
                "description": "Get global passport rankings based on visa-free access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get passport rankings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v2.PassportRank"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/reciprocal/{countryCode1}/{countryCode2}": {
            "get": {
                "description": "Get mutual visa requirements between two countries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get reciprocal visa requirements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First country code",
                        "name": "countryCode1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Second country code",
                        "name": "countryCode2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/v2.VisaRequirement"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/visas/requirements": {
            "get": {
                "description": "Get detailed visa requirements for a passport holder from one country traveling to another, using visas.json data primarily and falling back to passports.json if needed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visas"
                ],
                "summary": "Get visa requirements between two countries (enhanced)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Origin country code (e.g., USA, US, 840, etc.)",
                        "name": "fromCountry",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Destination country code (e.g., DEU, DE, 276, etc.)",
                        "name": "toCountry",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v2.EnhancedVisaRequirement"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v2.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "v1.CapitalInfo": {
            "type": "object",
            "properties": {
                "latlng": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        38.8951,
                        77.0364
                    ]
                }
            }
        },
        "v1.Car": {
            "type": "object",
            "properties": {
                "side": {
                    "type": "string",
                    "example": "right"
                },
                "signs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "USA"
                    ]
                }
            }
        },
        "v1.CoatOfArms": {
            "type": "object",
            "properties": {
                "png": {
                    "type": "string",
                    "example": "https://mainfacts.com/media/images/coats_of_arms/us.png"
                },
                "svg": {
                    "type": "string",
                    "example": "https://mainfacts.com/media/images/coats_of_arms/us.svg"
                }
            }
        },
        "v1.Country": {
            "type": "object",
            "properties": {
                "altSpellings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "area": {
                    "type": "number",
                    "example": 9372610
                },
                "borders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capital": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Washington",
                        " D.C."
                    ]
                },
                "capitalInfo": {
                    "$ref": "#/definitions/v1.CapitalInfo"
                },
                "car": {
                    "$ref": "#/definitions/v1.Car"
                },
                "cca2": {
                    "type": "string",
                    "example": "US"
                },
                "cca3": {
                    "type": "string",
                    "example": "USA"
                },
                "ccn3": {
                    "type": "string",
                    "example": "840"
                },
                "cioc": {
                    "type": "string",
                    "example": "USA"
                },
                "coatOfArms": {
                    "$ref": "#/definitions/v1.CoatOfArms"
                },
                "continents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currencies": {
                    "$ref": "#/definitions/v1.Currencies"
                },
                "demonyms": {
                    "$ref": "#/definitions/v1.Demonyms"
                },
                "fifa": {
                    "type": "string",
                    "example": "USA"
                },
                "flag": {
                    "type": "string",
                    "example": "🇺🇸"
                },
                "flags": {
                    "$ref": "#/definitions/v1.Flags"
                },
                "gini": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "idd": {
                    "$ref": "#/definitions/v1.IDD"
                },
                "independent": {
                    "type": "boolean",
                    "example": true
                },
                "landlocked": {
                    "type": "boolean",
                    "example": false
                },
                "languages": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "latlng": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "maps": {
                    "$ref": "#/definitions/v1.Maps"
                },
                "name": {
                    "$ref": "#/definitions/v1.Name"
                },
                "population": {
                    "type": "integer",
                    "example": 334805269
                },
                "postalCode": {
                    "$ref": "#/definitions/v1.PostalCode"
                },
                "region": {
                    "type": "string",
                    "example": "Americas"
                },
                "startOfWeek": {
                    "type": "string",
                    "example": "sunday"
                },
                "status": {
                    "type": "string",
                    "example": "officially-assigned"
                },
                "subregion": {
                    "type": "string",
                    "example": "North America"
                },
                "timezones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tld": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "translations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "common": {
                                "type": "string"
                            },
                            "official": {
                                "type": "string"
                            }
                        }
                    }
                },
                "unMember": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "v1.Currencies": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/v1.CurrencyInfo"
            }
        },
        "v1.CurrencyInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "US Dollar"
                },
                "symbol": {
                    "type": "string",
                    "example": "$"
                }
            }
        },
        "v1.DemonymInfo": {
            "type": "object",
            "properties": {
                "f": {
                    "type": "string",
                    "example": "American"
                },
                "m": {
                    "type": "string",
                    "example": "American"
                }
            }
        },
        "v1.Demonyms": {
            "type": "object",
            "properties": {
                "eng": {
                    "$ref": "#/definitions/v1.DemonymInfo"
                },
                "fra": {
                    "$ref": "#/definitions/v1.DemonymInfo"
                }
            }
        },
        "v1.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Bad request"
                }
            }
        },
        "v1.Flags": {
            "type": "object",
            "properties": {
                "alt": {
                    "type": "string",
                    "example": "Flag of the United States"
                },
                "png": {
                    "type": "string",
                    "example": "https://restcountries.eu/data/usa.png"
                },
                "svg": {
                    "type": "string",
                    "example": "https://restcountries.eu/data/usa.svg"
                }
            }
        },
        "v1.IDD": {
            "type": "object",
            "properties": {
                "root": {
                    "type": "string",
                    "example": "+1"
                },
                "suffixes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "201",
                        "202"
                    ]
                }
            }
        },
        "v1.Maps": {
            "type": "object",
            "properties": {
                "googleMaps": {
                    "type": "string",
                    "example": "https://goo.gl/maps/..."
                },
                "openStreetMaps": {
                    "type": "string",
                    "example": "https://www.openstreetmap.org/..."
                }
            }
        },
        "v1.Name": {
            "type": "object",
            "properties": {
                "common": {
                    "type": "string",
                    "example": "United States"
                },
                "official": {
                    "type": "string",
                    "example": "United States of America"
                }
            }
        },
        "v1.PostalCode": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "example": "#####-####"
                },
                "regex": {
                    "type": "string",
                    "example": "^\\d{5}(-\\d{4})?$"
                }
            }
        },
        "v2.Airline": {
            "description": "Airline represents data for a single airline.",
            "type": "object",
            "properties": {
                "active": {
                    "type": "string",
                    "example": "Y"
                },
                "airline_id": {
                    "type": "integer",
                    "example": 28
                },
                "alias": {
                    "type": "string",
                    "example": "\\N"
                },
                "callsign": {
                    "type": "string",
                    "example": "ASIANA"
                },
                "country": {
                    "type": "string",
                    "example": "Republic of Korea"
                },
                "iata": {
                    "type": "string",
                    "example": "OZ"
                },
                "icao": {
                    "type": "string",
                    "example": "AAR"
                },
                "name": {
                    "type": "string",
                    "example": "Asiana Airlines"
                }
            }
        },
        "v2.Airport": {
            "description": "Airport represents the airport data.",
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        ""
                    ]
                },
                "continent": {
                    "type": "string",
                    "example": "NA"
                },
                "elevation_ft": {
                    "type": "string",
                    "example": "136"
                },
                "frequencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.AirportFrequency"
                    }
                },
                "gps_code": {
                    "type": "string",
                    "example": "TVSA"
                },
                "home_link": {
                    "type": "string",
                    "example": "http://www.svgiadc.com"
                },
                "iata_code": {
                    "type": "string",
                    "example": "SVD"
                },
                "id": {
                    "type": "string",
                    "example": "322383"
                },
                "ident": {
                    "type": "string",
                    "example": "TVSA"
                },
                "iso_country": {
                    "type": "string",
                    "example": "VC"
                },
                "iso_region": {
                    "type": "string",
                    "example": "VC-04"
                },
                "keywords": {
                    "type": "string",
                    "example": ""
                },
                "latitude_deg": {
                    "type": "string",
                    "example": "13.156695"
                },
                "local_code": {
                    "type": "string",
                    "example": ""
                },
                "longitude_deg": {
                    "type": "string",
                    "example": "-61.149945"
                },
                "municipality": {
                    "type": "string",
                    "example": "Kingstown"
                },
                "name": {
                    "type": "string",
                    "example": "Argyle International Airport"
                },
                "runways": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.AirportRunway"
                    }
                },
                "scheduled_service": {
                    "type": "string",
                    "example": "yes"
                },
                "type": {
                    "type": "string",
                    "example": "medium_airport"
                },
                "wikipedia_link": {
                    "type": "string",
                    "example": "https://en.m.wikipedia.org/wiki/Argyle_International_Airport"
                }
            }
        },
        "v2.AirportDistance": {
            "description": "AirportDistance represents the distance between two airports.",
            "type": "object",
            "properties": {
                "airport1": {
                    "type": "string",
                    "example": "TVSA"
                },
                "airport2": {
                    "type": "string",
                    "example": "TVSB"
                },
                "distance_km": {
                    "type": "number",
                    "example": 1234.5
                },
                "distance_miles": {
                    "type": "number",
                    "example": 767.1
                }
            }
        },
        "v2.AirportFrequency": {
            "description": "AirportFrequency represents the frequency data for an airport.",
            "type": "object",
            "properties": {
                "airport_ident": {
                    "type": "string",
                    "example": "TVSA"
                },
                "airport_ref": {
                    "type": "string",
                    "example": "322383"
                },
                "description": {
                    "type": "string",
                    "example": "Argyle Approach"
                },
                "frequency_mhz": {
                    "type": "string",
                    "example": "120.8"
                },
                "id": {
                    "type": "string",
                    "example": "322388"
                },
                "type": {
                    "type": "string",
                    "example": "APP"
                }
            }
        },
        "v2.AirportRunway": {
            "description": "AirportRunway represents the runway data for an airport.",
            "type": "object",
            "properties": {
                "airport_ident": {
                    "type": "string",
                    "example": "TVSA"
                },
                "airport_ref": {
                    "type": "string",
                    "example": "322383"
                },
                "closed": {
                    "type": "string",
                    "example": "0"
                },
                "he_displaced_threshold_ft": {
                    "type": "string",
                    "example": "985"
                },
                "he_elevation_ft": {
                    "type": "string",
                    "example": "52"
                },
                "he_heading_degT": {
                    "type": "string",
                    "example": ""
                },
                "he_ident": {
                    "type": "string",
                    "example": "22"
                },
                "he_latitude_deg": {
                    "type": "string",
                    "example": ""
                },
                "he_longitude_deg": {
                    "type": "string",
                    "example": ""
                },
                "id": {
                    "type": "string",
                    "example": "322384"
                },
                "le_displaced_threshold_ft": {
                    "type": "string",
                    "example": ""
                },
                "le_elevation_ft": {
                    "type": "string",
                    "example": "136"
                },
                "le_heading_degT": {
                    "type": "string",
                    "example": ""
                },
                "le_ident": {
                    "type": "string",
                    "example": "04"
                },
                "le_latitude_deg": {
                    "type": "string",
                    "example": ""
                },
                "le_longitude_deg": {
                    "type": "string",
                    "example": ""
                },
                "length_ft": {
                    "type": "string",
                    "example": "9000"
                },
                "lighted": {
                    "type": "string",
                    "example": "1"
                },
                "surface": {
                    "type": "string",
                    "example": "ASP"
                },
                "width_ft": {
                    "type": "string",
                    "example": "148"
                }
            }
        },
        "v2.CountryAirports": {
            "description": "CountryAirports represents the airport data for a country.",
            "type": "object",
            "properties": {
                "airports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.Airport"
                    }
                },
                "code": {
                    "type": "string",
                    "example": "VC"
                },
                "continent": {
                    "type": "string",
                    "example": "NA"
                },
                "id": {
                    "type": "string",
                    "example": "302756"
                },
                "keywords": {
                    "type": "string",
                    "example": "Airports in Saint Vincent and the Grenadines"
                },
                "name": {
                    "type": "string",
                    "example": "Saint Vincent and the Grenadines"
                },
                "wikipedia_link": {
                    "type": "string",
                    "example": "https://en.wikipedia.org/wiki/Saint_Vincent_and_the_Grenadines"
                }
            }
        },
        "v2.CountryCodes": {
            "type": "object",
            "properties": {
                "iso2": {
                    "description": "ISO 3166-1 alpha-2 code (e.g., \"VC\" for Saint Vincent and the Grenadines).",
                    "type": "string",
                    "example": "VC"
                },
                "iso3": {
                    "description": "ISO 3166-1 alpha-3 code (e.g., \"VCT\" for Saint Vincent and the Grenadines).",
                    "type": "string",
                    "example": "VCT"
                },
                "region": {
                    "description": "Geographic region the country belongs to (e.g., \"Americas\").",
                    "type": "string",
                    "example": "Americas"
                },
                "subregion": {
                    "description": "Geographic subregion the country belongs to (e.g., \"Caribbean\").",
                    "type": "string",
                    "example": "Caribbean"
                }
            }
        },
        "v2.CountryRiskInfo": {
            "type": "object",
            "properties": {
                "advisory-state": {
                    "description": "Advisory level (numerical representation).",
                    "type": "integer",
                    "example": 3
                },
                "country-eng": {
                    "description": "English name of the country.",
                    "type": "string",
                    "example": "Afghanistan"
                },
                "country-fra": {
                    "description": "French name of the country.",
                    "type": "string",
                    "example": "Afghanistan"
                },
                "country-id": {
                    "description": "Internal country ID.",
                    "type": "integer",
                    "example": 1000
                },
                "country-iso": {
                    "description": "ISO 3166-1 alpha-2 country code.",
                    "type": "string",
                    "example": "AF"
                },
                "date-published": {
                    "description": "Date and time when the advisory was published.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v2.RiskDate"
                        }
                    ]
                },
                "eng": {
                    "description": "English-specific risk details.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v2.RiskLanguageDetails"
                        }
                    ]
                },
                "fra": {
                    "description": "French-specific risk details.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v2.RiskLanguageDetails"
                        }
                    ]
                },
                "has-advisory-warning": {
                    "description": "Flag indicating if there's an advisory warning (1 = yes, 0 = no).",
                    "type": "integer",
                    "example": 1
                },
                "has-content": {
                    "description": "Flag indicating if there's content associated with the advisory (1 = yes, 0 = no).",
                    "type": "integer",
                    "example": 1
                },
                "has-regional-advisory": {
                    "description": "Flag indicating if there are regional advisories (1 = yes, 0 = no).",
                    "type": "integer",
                    "example": 0
                },
                "recent-updates-type": {
                    "description": "Description of the most recent update.",
                    "type": "string",
                    "example": "Editorial change"
                }
            }
        },
        "v2.CountryVisaInfo": {
            "type": "object",
            "properties": {
                "codes": {
                    "description": "Various codes associated with the country (ISO2, ISO3, region, subregion).",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v2.CountryCodes"
                        }
                    ]
                },
                "name": {
                    "description": "Common name of the country.",
                    "type": "string",
                    "example": "Saint Vincent and the Grenadines"
                },
                "passport_index": {
                    "description": "Information about the passport ranking of this country.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v2.PassportIndex"
                        }
                    ]
                },
                "requirements": {
                    "description": "List of visa requirements for citizens of this country traveling to other countries.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.VisaRequirementEntry"
                    }
                },
                "visa_map": {
                    "description": "Information about the visa map image, including URL and legend.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v2.VisaMap"
                        }
                    ]
                },
                "wiki_url": {
                    "description": "URL to the Wikipedia page detailing visa requirements for citizens of this country.",
                    "type": "string",
                    "example": "https://en.wikipedia.org/wiki/Visa_requirements_for_Saint_Vincent_and_the_Grenadines_citizens"
                }
            }
        },
        "v2.DestinationVisaRequirement": {
            "type": "object",
            "properties": {
                "allowed_stay": {
                    "description": "Allowed duration of stay.",
                    "type": "string",
                    "example": "90 days"
                },
                "iso2": {
                    "description": "ISO 3166-1 alpha-2 code of the passport country.",
                    "type": "string",
                    "example": "US"
                },
                "iso3": {
                    "description": "ISO 3166-1 alpha-3 code of the passport country.",
                    "type": "string",
                    "example": "USA"
                },
                "notes": {
                    "description": "Additional notes about the visa requirement.",
                    "type": "string",
                    "example": ""
                },
                "passport_country": {
                    "description": "Name of the passport country.",
                    "type": "string",
                    "example": "United States"
                },
                "visa_requirement": {
                    "description": "Visa requirement (e.g., \"Visa required\", \"Visa not required\", \"e-Visa\").",
                    "type": "string",
                    "example": "Visa not required"
                }
            }
        },
        "v2.EnhancedVisaRequirement": {
            "description": "EnhancedVisaRequirement represents the detailed visa requirement between two countries.",
            "type": "object",
            "properties": {
                "allowed_stay": {
                    "description": "From visas.json",
                    "type": "string",
                    "example": "90 days"
                },
                "basic_requirement": {
                    "description": "From passports.json (optional)",
                    "type": "string",
                    "example": "90"
                },
                "from": {
                    "type": "string",
                    "example": "USA"
                },
                "notes": {
                    "description": "From visas.json",
                    "type": "string",
                    "example": ""
                },
                "to": {
                    "type": "string",
                    "example": "DEU"
                },
                "visa_requirement": {
                    "description": "From visas.json",
                    "type": "string",
                    "example": "Visa not required"
                }
            }
        },
        "v2.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "v2.FlightTrack": {
            "type": "object",
            "properties": {
                "callsign": {
                    "type": "string",
                    "example": "SVA35"
                },
                "endTime": {
                    "type": "integer",
                    "example": 1674349200
                },
                "icao24": {
                    "type": "string",
                    "example": "48585773"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.Waypoint"
                    }
                },
                "startTime": {
                    "type": "integer",
                    "example": 1674345600
                }
            }
        },
        "v2.OpenSkyStates": {
            "type": "object",
            "properties": {
                "states": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.StateVector"
                    }
                },
                "time": {
                    "type": "integer",
                    "example": 1674345600
                }
            }
        },
        "v2.PassportIndex": {
            "type": "object",
            "properties": {
                "ranking": {
                    "description": "Passport ranking.  This is a pointer to allow for null values (no ranking data).",
                    "type": "integer",
                    "example": 25
                },
                "ranking_source": {
                    "description": "Source of the passport ranking (e.g., \"Henley Passport Index\").",
                    "type": "string",
                    "example": "Henley Passport Index"
                },
                "visa_free_count": {
                    "description": "Number of countries accessible visa-free with this passport.",
                    "type": "integer",
                    "example": 157
                }
            }
        },
        "v2.PassportRank": {
            "type": "object",
            "properties": {
                "passportCode": {
                    "description": "The ISO3 code of the passport's country.",
                    "type": "string"
                },
                "rank": {
                    "description": "The passport's rank (1 being the highest).",
                    "type": "integer"
                },
                "visaFreeCount": {
                    "description": "The number of countries accessible visa-free.",
                    "type": "integer"
                }
            }
        },
        "v2.PassportResponse": {
            "description": "PassportResponse represents the passport data response.",
            "type": "object",
            "properties": {
                "passport": {
                    "type": "string",
                    "example": "USA"
                },
                "visas": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "v2.RiskData": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/v2.CountryRiskInfo"
            }
        },
        "v2.RiskDate": {
            "type": "object",
            "properties": {
                "asp": {
                    "description": "ASP.NET-formatted date and time.",
                    "type": "string"
                },
                "date": {
                    "description": "Human-readable date and time of the publication.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Unix timestamp of the publication date.",
                    "type": "integer"
                }
            }
        },
        "v2.RiskLanguageDetails": {
            "type": "object",
            "properties": {
                "advisory-text": {
                    "description": "Advisory text (e.g., \"Avoid all travel\", \"Exercise normal security precautions\").",
                    "type": "string",
                    "example": "Avoid all travel"
                },
                "friendly-date": {
                    "description": "Human-readable publication date.",
                    "type": "string",
                    "example": "January 22, 2025 14:48 EST"
                },
                "name": {
                    "description": "Country name in the specific language.",
                    "type": "string",
                    "example": "Afghanistan"
                },
                "recent-updates": {
                    "description": "Description of the most recent update.",
                    "type": "string",
                    "example": "Editorial change"
                },
                "url-slug": {
                    "description": "URL-friendly slug of the country name.",
                    "type": "string",
                    "example": "afghanistan"
                }
            }
        },
        "v2.SortedVisaDestinationInfo": {
            "type": "object",
            "properties": {
                "destination_country": {
                    "description": "Name of the destination country.",
                    "type": "string",
                    "example": "France"
                },
                "requirements": {
                    "description": "List of visa requirements for all passports visiting the destination, sorted.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.DestinationVisaRequirement"
                    }
                },
                "sorted_by": {
                    "description": "Field by which the requirements are sorted.",
                    "type": "string",
                    "example": "visa_requirement"
                }
            }
        },
        "v2.StateVector": {
            "type": "object",
            "properties": {
                "baro_altitude": {
                    "type": "number",
                    "example": 11277.6
                },
                "callsign": {
                    "type": "string",
                    "example": "SVA35"
                },
                "category": {
                    "type": "integer",
                    "example": 1
                },
                "geo_altitude": {
                    "type": "number",
                    "example": 11887.2
                },
                "icao24": {
                    "type": "string",
                    "example": "48585773"
                },
                "last_contact": {
                    "type": "integer",
                    "example": 1674345600
                },
                "latitude": {
                    "type": "number",
                    "example": 40.641766
                },
                "longitude": {
                    "type": "number",
                    "example": -73.778925
                },
                "on_ground": {
                    "type": "boolean",
                    "example": false
                },
                "origin_country": {
                    "type": "string",
                    "example": "Saudi Arabia"
                },
                "position_source": {
                    "type": "integer",
                    "example": 0
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "spi": {
                    "type": "boolean",
                    "example": false
                },
                "squawk": {
                    "type": "string",
                    "example": "2200"
                },
                "time_position": {
                    "type": "integer",
                    "example": 1674345600
                },
                "true_track": {
                    "type": "number",
                    "example": 285.7
                },
                "velocity": {
                    "type": "number",
                    "example": 245.34
                },
                "vertical_rate": {
                    "type": "number",
                    "example": 0
                }
            }
        },
        "v2.VisaData": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/v2.CountryVisaInfo"
            }
        },
        "v2.VisaDestinationInfo": {
            "type": "object",
            "properties": {
                "destination_country": {
                    "description": "Name of the destination country.",
                    "type": "string",
                    "example": "France"
                },
                "requirements": {
                    "description": "List of visa requirements for all passports visiting the destination.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v2.DestinationVisaRequirement"
                    }
                }
            }
        },
        "v2.VisaMap": {
            "type": "object",
            "properties": {
                "legend": {
                    "description": "Legend explaining the color coding of the visa map.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "map_url": {
                    "description": "URL to the visa map image.",
                    "type": "string",
                    "example": "https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Visa_requirements_for_Saint_Vincent_and_the_Grenadines_citizens.png/800px-Visa_requirements_for_Saint_Vincent_and_the_Grenadines_citizens.png"
                }
            }
        },
        "v2.VisaRequirement": {
            "description": "VisaRequirement represents the visa requirement between two countries.",
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "example": "USA"
                },
                "requirement": {
                    "type": "string",
                    "example": "90"
                },
                "to": {
                    "type": "string",
                    "example": "DEU"
                }
            }
        },
        "v2.VisaRequirementEntry": {
            "type": "object",
            "properties": {
                "allowed_stay": {
                    "description": "Allowed duration of stay (e.g., \"90 days\", \"30 days\").",
                    "type": "string",
                    "example": ""
                },
                "country": {
                    "description": "Destination country name.",
                    "type": "string",
                    "example": "Afghanistan"
                },
                "iso2": {
                    "description": "ISO 3166-1 alpha-2 code of the destination country.",
                    "type": "string",
                    "example": "AF"
                },
                "iso3": {
                    "description": "ISO 3166-1 alpha-3 code of the destination country.",
                    "type": "string",
                    "example": "AFG"
                },
                "notes": {
                    "description": "Additional notes about the visa requirement.",
                    "type": "string",
                    "example": ""
                },
                "region": {
                    "description": "Region of the destination country.",
                    "type": "string",
                    "example": "Asia"
                },
                "subregion": {
                    "description": "Subregion of the destination country.",
                    "type": "string",
                    "example": "Southern Asia"
                },
                "visa_requirement": {
                    "description": "Visa requirement (e.g., \"Visa required\", \"Visa not required\", \"e-Visa\").",
                    "type": "string",
                    "example": "Visa required"
                }
            }
        },
        "v2.Waypoint": {
            "type": "object",
            "properties": {
                "baro_altitude": {
                    "type": "number",
                    "example": 10000
                },
                "latitude": {
                    "type": "number",
                    "example": 40.7789
                },
                "longitude": {
                    "type": "number",
                    "example": -73.9692
                },
                "on_ground": {
                    "type": "boolean",
                    "example": false
                },
                "time": {
                    "type": "integer",
                    "example": 1674345600
                },
                "true_track": {
                    "type": "number",
                    "example": 270
                }
            }
        }
    }
}
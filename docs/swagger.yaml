basePath: /v1
definitions:
  v1.CapitalInfo:
    properties:
      latlng:
        description: Latitude and longitude of the capital
        example:
        - 38.8951
        - 77.0364
        items:
          type: number
        type: array
    type: object
  v1.Car:
    properties:
      side:
        description: Side of the road cars drive on
        example: right
        type: string
      signs:
        description: Signs used on license plates
        example:
        - USA
        items:
          type: string
        type: array
    type: object
  v1.CoatOfArms:
    properties:
      png:
        description: PNG format URL of the coat of arms
        example: https://mainfacts.com/media/images/coats_of_arms/us.png
        type: string
      svg:
        description: SVG format URL of the coat of arms
        example: https://mainfacts.com/media/images/coats_of_arms/us.svg
        type: string
    type: object
  v1.Country:
    properties:
      altSpellings:
        example:
        - US
        - USA
        - United States of America
        items:
          type: string
        type: array
      area:
        example: 9372610
        type: number
      borders:
        example:
        - CAN
        - MEX
        items:
          type: string
        type: array
      capital:
        example:
        - Washington
        - ' D.C.'
        items:
          type: string
        type: array
      capitalInfo:
        $ref: '#/definitions/v1.CapitalInfo'
      car:
        $ref: '#/definitions/v1.Car'
      cca2:
        example: US
        type: string
      cca3:
        example: USA
        type: string
      ccn3:
        example: "840"
        type: string
      cioc:
        example: USA
        type: string
      coatOfArms:
        $ref: '#/definitions/v1.CoatOfArms'
      continents:
        example:
        - North America
        items:
          type: string
        type: array
      currencies:
        $ref: '#/definitions/v1.Currencies'
      demonyms:
        $ref: '#/definitions/v1.Demonyms'
      fifa:
        example: USA
        type: string
      flag:
        example: "\U0001F1FA\U0001F1F8"
        type: string
      flags:
        $ref: '#/definitions/v1.Flags'
      gini:
        additionalProperties:
          type: number
        example:
          "2019": 39.7
        type: object
      idd:
        $ref: '#/definitions/v1.IDD'
      independent:
        example: true
        type: boolean
      landlocked:
        example: false
        type: boolean
      languages:
        additionalProperties:
          type: string
        example:
          eng: English
        type: object
      latlng:
        example:
        - 38
        - 97
        items:
          type: number
        type: array
      maps:
        $ref: '#/definitions/v1.Maps'
      name:
        $ref: '#/definitions/v1.Name'
      population:
        example: 334805269
        type: integer
      postalCode:
        $ref: '#/definitions/v1.PostalCode'
      region:
        example: Americas
        type: string
      startOfWeek:
        example: sunday
        type: string
      status:
        example: officially-assigned
        type: string
      subregion:
        example: North America
        type: string
      timezones:
        example:
        - UTC-12:00
        - UTC-11:00
        - UTC-10:00
        - UTC-09:00
        - UTC-08:00
        - UTC-07:00
        - UTC-06:00
        - UTC-05:00
        - UTC-04:00
        - UTC+10:00
        - UTC+12:00
        items:
          type: string
        type: array
      tld:
        items:
          type: string
        type: array
      translations:
        additionalProperties:
          properties:
            common:
              example: Vereinigte Staaten
              type: string
            official:
              example: Vereinigte Staaten von Amerika
              type: string
          type: object
        type: object
      unMember:
        example: true
        type: boolean
    type: object
  v1.Currencies:
    additionalProperties:
      $ref: '#/definitions/v1.CurrencyInfo'
    type: object
  v1.CurrencyInfo:
    properties:
      name:
        description: Name of the currency
        example: US Dollar
        type: string
      symbol:
        description: Symbol of the currency
        example: $
        type: string
    type: object
  v1.DemonymInfo:
    properties:
      f:
        description: Feminine form of the demonym
        example: American
        type: string
      m:
        description: Masculine form of the demonym
        example: American
        type: string
    type: object
  v1.Demonyms:
    properties:
      eng:
        allOf:
        - $ref: '#/definitions/v1.DemonymInfo'
        description: English demonyms
      fra:
        allOf:
        - $ref: '#/definitions/v1.DemonymInfo'
        description: French demonyms (if available)
    type: object
  v1.ErrorResponse:
    description: Error response model
    properties:
      message:
        description: |-
          The error message
          Required: true
        example: Bad request
        type: string
    type: object
  v1.Flags:
    properties:
      alt:
        description: Alternative text description of the flag
        example: The flag of the United States of America is a...
        type: string
      png:
        description: PNG format URL of the flag
        example: https://restcountries.eu/data/usa.png
        type: string
      svg:
        description: SVG format URL of the flag
        example: https://restcountries.eu/data/usa.svg
        type: string
    type: object
  v1.IDD:
    properties:
      root:
        description: Root for the international dialing code.
        example: "+1"
        type: string
      suffixes:
        description: Suffixes for the international dialing code.
        example:
        - "201"
        - "202"
        items:
          type: string
        type: array
    type: object
  v1.Maps:
    properties:
      googleMaps:
        description: Google Maps URL
        example: https://goo.gl/maps/...
        type: string
      openStreetMaps:
        description: OpenStreetMaps URL
        example: https://www.openstreetmap.org/...
        type: string
    type: object
  v1.Name:
    properties:
      common:
        description: Common name of the country
        example: United States
        type: string
      official:
        description: Official name of the country
        example: United States of America
        type: string
    type: object
  v1.PostalCode:
    properties:
      format:
        description: Format of the postal code
        example: '#####-####'
        type: string
      regex:
        description: Regex pattern for validating the postal code
        example: ^\d{5}(-\d{4})?$
        type: string
    type: object
host: atlas.doroad.io
info:
  contact:
    email: support@doroad.ai
    name: Atlas API Support
    url: https://github.com/DoROAD-AI/atlas/issues
  description: A comprehensive REST API providing detailed country information worldwide.
    This modern, high-performance service offers extensive data about countries, including
    demographics, geography, and international codes.
  license:
    name: MIT
    url: https://github.com/DoROAD-AI/atlas/blob/main/LICENSE
  termsOfService: http://atlas.doroad.io/terms/
  title: Atlas - Geographic Data API by DoROAD
  version: "1.0"
paths:
  /alpha:
    get:
      consumes:
      - application/json
      description: Get countries matching a list of codes (CCA2, CCN3, CCA3, or CIOC).
      parameters:
      - description: Comma-separated list of country codes (CCA2, CCN3, CCA3, CIOC)
        in: query
        name: codes
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by codes
      tags:
      - Countries
  /capital/{capital}:
    get:
      consumes:
      - application/json
      description: Get countries matching a capital city name.
      parameters:
      - description: Capital city name
        in: path
        name: capital
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by capital
      tags:
      - Countries
  /countries:
    get:
      consumes:
      - application/json
      description: Get details of all countries, with optional filters.
      parameters:
      - description: Filter by independent status (true or false)
        in: query
        name: independent
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get all countries
      tags:
      - Countries
  /countries/{code}:
    get:
      consumes:
      - application/json
      description: Get details of a specific country by its code (CCA2 or CCA3).
      parameters:
      - description: Country code (CCA2 or CCA3)
        in: path
        name: code
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.Country'
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get country by code
      tags:
      - Countries
  /currency/{currency}:
    get:
      consumes:
      - application/json
      description: Get countries matching a currency code or name.
      parameters:
      - description: Currency code or name
        in: path
        name: currency
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by currency
      tags:
      - Countries
  /demonym/{demonym}:
    get:
      consumes:
      - application/json
      description: Get countries matching a demonym.
      parameters:
      - description: Demonym
        in: path
        name: demonym
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by demonym
      tags:
      - Countries
  /independent:
    get:
      consumes:
      - application/json
      description: Get countries filtered by independence. If not specified, defaults
        to status=true.
      parameters:
      - description: true or false. Defaults to 'true' if not specified
        in: query
        name: status
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by independence status
      tags:
      - Countries
  /lang/{language}:
    get:
      consumes:
      - application/json
      description: Get countries matching a language code or name.
      parameters:
      - description: Language code or name
        in: path
        name: language
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by language
      tags:
      - Countries
  /name/{name}:
    get:
      consumes:
      - application/json
      description: Get countries matching a name query (common or official). Use fullText=true
        for exact name match.
      parameters:
      - description: Country name (common or official)
        in: path
        name: name
        required: true
        type: string
      - description: Exact match for full name (true/false)
        in: query
        name: fullText
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by name
      tags:
      - Countries
  /region/{region}:
    get:
      consumes:
      - application/json
      description: Get countries matching a region.
      parameters:
      - description: Region name
        in: path
        name: region
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by region
      tags:
      - Countries
  /subregion/{subregion}:
    get:
      consumes:
      - application/json
      description: Get countries matching a subregion.
      parameters:
      - description: Subregion name
        in: path
        name: subregion
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by subregion
      tags:
      - Countries
  /translation/{translation}:
    get:
      consumes:
      - application/json
      description: Get countries matching a translation.
      parameters:
      - description: Translation
        in: path
        name: translation
        required: true
        type: string
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.Country'
            type: array
        "404":
          description: Country not found
          schema:
            $ref: '#/definitions/v1.ErrorResponse'
      summary: Get countries by translation
      tags:
      - Countries
schemes:
- https
swagger: "2.0"
